{"ast":null,"code":"var _jsxFileName = \"/home/tfg/epi-cropsense/frontend/cliente/src/componentes/principal.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './principal.css';\nfunction Principal() {\n  const [arduinos, setArduinos] = useState([]);\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchArduinos = async () => {\n      const userId = localStorage.getItem('userId'); // Recupera el ID del usuario del almacenamiento local\n      const token = localStorage.getItem('token'); // Recupera el token del almacenamiento local\n      try {\n        const response = await axios.get(`http://localhost:3000/users/${userId}/arduinos`, {\n          headers: {\n            'Authorization': `Bearer ${token}` // Incluye el token en la cabecera de la solicitud\n          }\n        });\n        setArduinos(response.data);\n      } catch (error) {\n        console.error('Ocurrió un error al obtener los arduinos:', error);\n      }\n    };\n    const fetchWeather = async () => {\n      try {\n        const response = await axios.get(`https://api.open-meteo.com/v1/forecast?latitude=43.550299&longitude=-5.922112&hourly=temperature_2m`);\n        console.log(response.data);\n        setWeather(response.data);\n        setLoading(false); // Agrega esta línea\n      } catch (error) {\n        console.error('Ocurrió un error al obtener el tiempo:', error);\n        setLoading(false); // Agrega esta línea\n      }\n    };\n    fetchArduinos();\n    fetchWeather();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Arduinos del usuario:\"), arduinos.map((arduino, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, arduino.nombre), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Ubicaci\\xF3n: \", arduino.ubicacion), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"\\xDAltima IP: \", arduino.ultimaIP), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Fecha \\xDAltima Comunicaci\\xF3n: \", new Date(arduino.fechaUltimaComunicacion).toLocaleString()), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Coordenadas GPS: \", arduino.coordenadasGPS.x, \", \", arduino.coordenadasGPS.y), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"MAC: \", arduino.mac))), loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Cargando datos del clima...\") : weather && weather.hourly && weather.hourly.temperature_2m && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Tiempo en Aviles:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Temperatura: \", weather.hourly.temperature_2m[0], \" \\xB0C\")));\n}\nexport default Principal;","map":{"version":3,"names":["React","useEffect","useState","axios","Principal","arduinos","setArduinos","weather","setWeather","loading","setLoading","fetchArduinos","userId","localStorage","getItem","token","response","get","headers","data","error","console","fetchWeather","log","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","arduino","index","key","nombre","ubicacion","ultimaIP","Date","fechaUltimaComunicacion","toLocaleString","coordenadasGPS","x","y","mac","hourly","temperature_2m"],"sources":["/home/tfg/epi-cropsense/frontend/cliente/src/componentes/principal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './principal.css';\n\nfunction Principal() {\n  const [arduinos, setArduinos] = useState([]);\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n\n  useEffect(() => {\n    const fetchArduinos = async () => {\n      const userId = localStorage.getItem('userId'); // Recupera el ID del usuario del almacenamiento local\n      const token = localStorage.getItem('token'); // Recupera el token del almacenamiento local\n      try {\n        const response = await axios.get(`http://localhost:3000/users/${userId}/arduinos`, {\n          headers: {\n            'Authorization': `Bearer ${token}` // Incluye el token en la cabecera de la solicitud\n          }\n        });\n        setArduinos(response.data);\n      } catch (error) {\n        console.error('Ocurrió un error al obtener los arduinos:', error);\n      }\n    };\n    const fetchWeather = async () => {\n        try {\n          const response = await axios.get(`https://api.open-meteo.com/v1/forecast?latitude=43.550299&longitude=-5.922112&hourly=temperature_2m`);\n          console.log(response.data);\n          setWeather(response.data);\n          setLoading(false); // Agrega esta línea\n        } catch (error) {\n          console.error('Ocurrió un error al obtener el tiempo:', error);\n          setLoading(false); // Agrega esta línea\n        }\n      };\n\n      fetchArduinos();\n      fetchWeather();\n  }, []);\n\n  return (\n    <div>\n      <h1>Arduinos del usuario:</h1>\n      {arduinos.map((arduino, index) => (\n        <div key={index}>\n          <h2>{arduino.nombre}</h2>\n          <p>Ubicación: {arduino.ubicacion}</p>\n          <p>Última IP: {arduino.ultimaIP}</p>\n          <p>Fecha Última Comunicación: {new Date(arduino.fechaUltimaComunicacion).toLocaleString()}</p>\n          <p>Coordenadas GPS: {arduino.coordenadasGPS.x}, {arduino.coordenadasGPS.y}</p>\n          <p>MAC: {arduino.mac}</p>\n        </div>\n      ))}\n      {loading ? (\n        <p>Cargando datos del clima...</p>\n      ) : (\n        weather && weather.hourly && weather.hourly.temperature_2m && (\n          <div>\n            <h1>Tiempo en Aviles:</h1>\n            <p>Temperatura: {weather.hourly.temperature_2m[0]} °C</p>\n          </div>\n        )\n      )}\n    </div>\n  );\n}\n\nexport default Principal;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAExB,SAASC,SAASA,CAAA,EAAG;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAG5CD,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;MAC/C,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MAC7C,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,+BAA+BL,MAAM,WAAW,EAAE;UACjFM,OAAO,EAAE;YACP,eAAe,EAAE,UAAUH,KAAK,EAAE,CAAC;UACrC;QACF,CAAC,CAAC;QACFT,WAAW,CAACU,QAAQ,CAACG,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACnE;IACF,CAAC;IACD,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMN,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,qGAAqG,CAAC;QACvII,OAAO,CAACE,GAAG,CAACP,QAAQ,CAACG,IAAI,CAAC;QAC1BX,UAAU,CAACQ,QAAQ,CAACG,IAAI,CAAC;QACzBT,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;QAC9DV,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;IAEDC,aAAa,CAAC,CAAC;IACfW,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtB,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE9B,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,uBAAyB,CAAC,EAC7BzB,QAAQ,CAAC0B,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BjC,KAAA,CAAAwB,aAAA;IAAKU,GAAG,EAAED,KAAM;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACd9B,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKE,OAAO,CAACG,MAAW,CAAC,eACzBnC,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,gBAAW,EAACE,OAAO,CAACI,SAAa,CAAC,eACrCpC,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,gBAAW,EAACE,OAAO,CAACK,QAAY,CAAC,eACpCrC,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,mCAA2B,EAAC,IAAIQ,IAAI,CAACN,OAAO,CAACO,uBAAuB,CAAC,CAACC,cAAc,CAAC,CAAK,CAAC,eAC9FxC,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,mBAAiB,EAACE,OAAO,CAACS,cAAc,CAACC,CAAC,EAAC,IAAE,EAACV,OAAO,CAACS,cAAc,CAACE,CAAK,CAAC,eAC9E3C,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,OAAK,EAACE,OAAO,CAACY,GAAO,CACrB,CACN,CAAC,EACDnC,OAAO,gBACNT,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,6BAA8B,CAAC,GAElCvB,OAAO,IAAIA,OAAO,CAACsC,MAAM,IAAItC,OAAO,CAACsC,MAAM,CAACC,cAAc,iBACxD9C,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE9B,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,mBAAqB,CAAC,eAC1B9B,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,eAAa,EAACvB,OAAO,CAACsC,MAAM,CAACC,cAAc,CAAC,CAAC,CAAC,EAAC,QAAM,CACrD,CAGN,CAAC;AAEV;AAEA,eAAe1C,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}