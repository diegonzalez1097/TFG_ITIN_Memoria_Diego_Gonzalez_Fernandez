{"ast":null,"code":"var _jsxFileName = \"/home/tfg/epi-cropsense/frontend/cliente/src/componentes/principal.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nfunction Principal() {\n  const [arduinos, setArduinos] = useState([]);\n  useEffect(() => {\n    const fetchArduinos = async () => {\n      const userId = localStorage.getItem('userId'); // Recupera el ID del usuario del almacenamiento local\n      try {\n        const response = await axios.get(`http://localhost:3000/users/${userId}/arduinos`);\n        setArduinos(response.data);\n      } catch (error) {\n        console.error('Ocurrió un error al obtener los arduinos:', error);\n      }\n    };\n    fetchArduinos();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Arduinos del usuario:\"), arduinos.map((arduino, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  })));\n}\nexport default Principal;","map":{"version":3,"names":["React","useEffect","useState","axios","Principal","arduinos","setArduinos","fetchArduinos","userId","localStorage","getItem","response","get","data","error","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","arduino","index","key"],"sources":["/home/tfg/epi-cropsense/frontend/cliente/src/componentes/principal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction Principal() {\n  const [arduinos, setArduinos] = useState([]);\n\n  useEffect(() => {\n    const fetchArduinos = async () => {\n      const userId = localStorage.getItem('userId'); // Recupera el ID del usuario del almacenamiento local\n      try {\n        const response = await axios.get(`http://localhost:3000/users/${userId}/arduinos`);\n        setArduinos(response.data);\n      } catch (error) {\n        console.error('Ocurrió un error al obtener los arduinos:', error);\n      }\n    };\n\n    fetchArduinos();\n  }, []);\n\n  return (\n    <div>\n      <h1>Arduinos del usuario:</h1>\n      {arduinos.map((arduino, index) => (\n        <div key={index}>\n          {/* Renderiza la información del arduino aquí */}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Principal;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,SAASA,CAAA,EAAG;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMM,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;MAC/C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,+BAA+BJ,MAAM,WAAW,CAAC;QAClFF,WAAW,CAACK,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACnE;IACF,CAAC;IAEDP,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,KAAA,CAAAgB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEtB,KAAA,CAAAgB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,uBAAyB,CAAC,EAC7BjB,QAAQ,CAACkB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BzB,KAAA,CAAAgB,aAAA;IAAKU,GAAG,EAAED,KAAM;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAEX,CACN,CACE,CAAC;AAEV;AAEA,eAAelB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}