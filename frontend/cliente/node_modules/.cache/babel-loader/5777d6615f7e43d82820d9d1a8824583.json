{"ast":null,"code":"var _jsxFileName = \"/home/tfg/epi-cropsense/frontend/cliente/src/componentes/principal.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './principal.css';\nfunction Principal() {\n  const [arduinos, setArduinos] = useState([]);\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [sensorReadings, setSensorReadings] = useState([]);\n  useEffect(() => {\n    const fetchArduinos = async () => {\n      const userId = localStorage.getItem('userId'); // Recupera el ID del usuario del almacenamiento local\n      const token = localStorage.getItem('token'); // Recupera el token del almacenamiento local\n      try {\n        const response = await axios.get(`http://localhost:3000/users/${userId}/arduinos`, {\n          headers: {\n            'Authorization': `Bearer ${token}` // Incluye el token en la cabecera de la solicitud\n          }\n        });\n        setArduinos(response.data);\n      } catch (error) {\n        console.error('Ocurrió un error al obtener los arduinos:', error);\n      }\n    };\n    const fetchWeather = async () => {\n      try {\n        const response = await axios.get(`https://api.open-meteo.com/v1/forecast?latitude=43.550299&longitude=-5.922112&hourly=temperature_2m`);\n        console.log(response.data);\n        setWeather(response.data);\n        setLoading(false); // Agrega esta línea\n      } catch (error) {\n        console.error('Ocurrió un error al obtener el tiempo:', error);\n        setLoading(false); // Agrega esta línea\n      }\n    };\n    const fetchSensorReadings = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.get('http://localhost:3000/sensor/readings', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setSensorReadings(response.data.readings);\n        //console.log(sensorReadings)\n      } catch (error) {\n        console.error('Error fetching sensor readings:', error);\n      }\n    };\n    fetchArduinos();\n    fetchWeather();\n    fetchSensorReadings();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Arduinos del usuario:\"), arduinos.map((arduino, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, arduino.nombre), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, \"Sensor ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, \"Fecha y hora\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, \"Valor\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, sensorReadings.filter(reading => reading.deviceId === arduino.idDispositivo).map((reading, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, reading.sensorId), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, reading.dateTime), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, reading.value))))))), loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Cargando datos del clima...\") : weather && weather.hourly && weather.hourly.temperature_2m && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Tiempo en Aviles:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Temperatura: \", weather.hourly.temperature_2m[0], \" \\xB0C\")));\n}\nexport default Principal;","map":{"version":3,"names":["React","useEffect","useState","axios","Principal","arduinos","setArduinos","weather","setWeather","loading","setLoading","sensorReadings","setSensorReadings","fetchArduinos","userId","localStorage","getItem","token","response","get","headers","data","error","console","fetchWeather","log","fetchSensorReadings","readings","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","arduino","index","key","nombre","filter","reading","deviceId","idDispositivo","sensorId","dateTime","value","hourly","temperature_2m","className"],"sources":["/home/tfg/epi-cropsense/frontend/cliente/src/componentes/principal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './principal.css';\n\nfunction Principal() {\n  const [arduinos, setArduinos] = useState([]);\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [sensorReadings, setSensorReadings] = useState([]); \n\n\n\n  useEffect(() => {\n    const fetchArduinos = async () => {\n      const userId = localStorage.getItem('userId'); // Recupera el ID del usuario del almacenamiento local\n      const token = localStorage.getItem('token'); // Recupera el token del almacenamiento local\n      try {\n        const response = await axios.get(`http://localhost:3000/users/${userId}/arduinos`, {\n          headers: {\n            'Authorization': `Bearer ${token}` // Incluye el token en la cabecera de la solicitud\n          }\n        });\n        setArduinos(response.data);\n      } catch (error) {\n        console.error('Ocurrió un error al obtener los arduinos:', error);\n      }\n    };\n    const fetchWeather = async () => {\n        try {\n          const response = await axios.get(`https://api.open-meteo.com/v1/forecast?latitude=43.550299&longitude=-5.922112&hourly=temperature_2m`);\n          console.log(response.data);\n          setWeather(response.data);\n          setLoading(false); // Agrega esta línea\n        } catch (error) {\n          console.error('Ocurrió un error al obtener el tiempo:', error);\n          setLoading(false); // Agrega esta línea\n        }\n      };\n\n      const fetchSensorReadings = async () => {\n        const token = localStorage.getItem('token');\n        try {\n          const response = await axios.get('http://localhost:3000/sensor/readings', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          setSensorReadings(response.data.readings);\n          //console.log(sensorReadings)\n        } catch (error) {\n          console.error('Error fetching sensor readings:', error);\n        }\n      };\n\n      fetchArduinos();\n      fetchWeather();\n      fetchSensorReadings();\n  }, []);\n\n  return (\n    <div>\n      <h1>Arduinos del usuario:</h1>\n      {arduinos.map((arduino, index) => (\n          <div key={index}>\n            <h2>{arduino.nombre}</h2>\n            <table>\n              <thead>\n                <tr>\n                  <th>Sensor ID</th>\n                  <th>Fecha y hora</th>\n                  <th>Valor</th>\n                </tr>\n              </thead>\n              <tbody>\n                {sensorReadings.filter(reading => reading.deviceId === arduino.idDispositivo).map((reading, index) => (\n                  <tr key={index}>\n                    <td>{reading.sensorId}</td>\n                    <td>{reading.dateTime}</td>\n                    <td>{reading.value}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ))}\n\n      {loading ? (\n        <p>Cargando datos del clima...</p>\n      ) : (\n        weather && weather.hourly && weather.hourly.temperature_2m && (\n          <div className=\"weather-container\"> {/* Agrega esta línea */}\n            <h1>Tiempo en Aviles:</h1>\n            <p>Temperatura: {weather.hourly.temperature_2m[0]} °C</p>\n          </div>\n        )\n      )}\n    </div>\n  );\n}\n\nexport default Principal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}